// This file was generated by Mendix Modeler.
//
// WARNING: Only the following code will be retained when actions are regenerated:
// - the import list
// - the code between BEGIN USER CODE and END USER CODE
// - the code between BEGIN EXTRA CODE and END EXTRA CODE
// Other code you write will be lost the next time you deploy the project.
// Special characters, e.g., é, ö, à, etc. are supported in comments.

package watsonservices.actions;

import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.net.MalformedURLException;
import java.util.HashMap;
import java.util.Map;

import com.ibm.watson.developer_cloud.alchemy.v1.AlchemyLanguage;
import com.ibm.watson.developer_cloud.alchemy.v1.model.Keyword;
import com.ibm.watson.developer_cloud.alchemy.v1.model.Keywords;
import com.mendix.core.Core;
import com.mendix.systemwideinterfaces.core.IContext;
import com.mendix.systemwideinterfaces.core.IMendixObject;
import com.mendix.webui.CustomJavaAction;

import watsonservices.proxies.KeywordExtraction;
import watsonservices.proxies.KeywordsItem;

public class UrlKeywordExtractionCore extends CustomJavaAction<IMendixObject>
{
	private IMendixObject __request;
	private watsonservices.proxies.UrlKeywordExtractionRequest request;

	public UrlKeywordExtractionCore(IContext context, IMendixObject request)
	{
		super(context);
		this.__request = request;
	}

	@Override
	public IMendixObject executeAction() throws Exception
	{
		this.request = __request == null ? null : watsonservices.proxies.UrlKeywordExtractionRequest.initialize(getContext(), __request);

		// BEGIN USER CODE

        StringBuilder htmlContent = new StringBuilder();

        BufferedReader br = null;

        try {
            java.net.URL url = new java.net.URL(request.geturl());
            java.net.URLConnection conn = url.openConnection();
            conn.setRequestProperty("User-Agent", "Mozilla/5.0 (Windows NT 5.1; rv:19.0) Gecko/20100101 Firefox/19.0");
            conn.connect();

            br = new BufferedReader(new InputStreamReader(conn.getInputStream()));

            String line;
            while ((line = br.readLine()) != null) {
                htmlContent.append(line);
            }
        } catch (MalformedURLException mue) {
            mue.printStackTrace();
        } catch (IOException ioe) {
            ioe.printStackTrace();
        } finally {
            try {
                if (br != null) br.close();
            } catch (IOException ioe) {
                // nothing to see here
            }
        }


        AlchemyLanguage service = new AlchemyLanguage();
        service.setApiKey(request.getapikey());

        Map<String, Object> params = new HashMap<String, Object>();
        params.put(AlchemyLanguage.HTML, htmlContent.toString());
        Keywords keywords = service.getKeywords(params).execute();

        IMendixObject iMendixObject = Core.instantiate(getContext(), KeywordExtraction.entityName);
        KeywordExtraction keywordExtraction = KeywordExtraction.load(getContext(), iMendixObject.getId());

        //keywordExtraction.setStatus();
        keywordExtraction.setUrl(request.geturl());
        keywordExtraction.setLanguage(keywords.getLanguage());
        keywordExtraction.setText(keywords.getText());

        keywordExtraction.commit();

        for (Keyword keyword : keywords.getKeywords()) {
            IMendixObject keywordsItemMendixObject = Core.instantiate(getContext(), KeywordsItem.entityName);
            KeywordsItem newKeywordsItem = KeywordsItem.load(getContext(), keywordsItemMendixObject.getId());
            newKeywordsItem.setText(keyword.getText());
            newKeywordsItem.setRelevance(keyword.getRelevance().toString());
            newKeywordsItem.setkeywords(keywordExtraction);

            newKeywordsItem.commit();
        }

        return keywordExtraction.getMendixObject();

		// END USER CODE
	}

	/**
	 * Returns a string representation of this action
	 */
	@Override
	public String toString()
	{
		return "UrlKeywordExtractionCore";
	}

	// BEGIN EXTRA CODE
	// END EXTRA CODE
}
