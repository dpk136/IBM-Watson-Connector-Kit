// This file was generated by Mendix Modeler.
//
// WARNING: Only the following code will be retained when actions are regenerated:
// - the import list
// - the code between BEGIN USER CODE and END USER CODE
// - the code between BEGIN EXTRA CODE and END EXTRA CODE
// Other code you write will be lost the next time you deploy the project.
// Special characters, e.g., é, ö, à, etc. are supported in comments.

package watsonservices.actions;

import java.io.InputStream;
import com.ibm.watson.developer_cloud.text_to_speech.v1.model.AudioFormat;
import com.ibm.watson.developer_cloud.text_to_speech.v1.model.Voice;
import com.mendix.core.Core;
import com.mendix.systemwideinterfaces.core.IContext;
import com.mendix.systemwideinterfaces.core.IMendixObject;
import com.mendix.webui.CustomJavaAction;
import watsonservices.proxies.Speech;
import watsonservices.proxies.VoiceEnum;

public class TextToSpeech extends CustomJavaAction<IMendixObject>
{
	private String Username;
	private String Password;
	private String Text;
	private watsonservices.proxies.VoiceEnum VoiceEnumParameter1;

	public TextToSpeech(IContext context, String Username, String Password, String Text, String VoiceEnumParameter1)
	{
		super(context);
		this.Username = Username;
		this.Password = Password;
		this.Text = Text;
		this.VoiceEnumParameter1 = VoiceEnumParameter1 == null ? null : watsonservices.proxies.VoiceEnum.valueOf(VoiceEnumParameter1);
	}

	@Override
	public IMendixObject executeAction() throws Exception
	{
		// BEGIN USER CODE
		com.ibm.watson.developer_cloud.text_to_speech.v1.TextToSpeech service = new com.ibm.watson.developer_cloud.text_to_speech.v1.TextToSpeech();
		service.setUsernameAndPassword(Username, Password);
		
		Voice voice = Voice.EN_ALLISON;
		
		if(VoiceEnumParameter1.equals(VoiceEnum.DE_DIETER))
			voice = Voice.DE_DIETER;
		else if(VoiceEnumParameter1.equals(VoiceEnum.DE_GIRGIT))
			voice = Voice.DE_GIRGIT;
		else if(VoiceEnumParameter1.equals(VoiceEnum.EN_ALLISON))
			voice = Voice.EN_ALLISON;
		else if(VoiceEnumParameter1.equals(VoiceEnum.EN_LISA))
			voice = Voice.EN_LISA;
		else if(VoiceEnumParameter1.equals(VoiceEnum.ES_ENRIQUE))
			voice = Voice.ES_ENRIQUE;
		else if(VoiceEnumParameter1.equals(VoiceEnum.ES_LAURA))
			voice = Voice.ES_LAURA;
		else if(VoiceEnumParameter1.equals(VoiceEnum.ES_SOFIA))
			voice = Voice.ES_SOFIA;
		else if(VoiceEnumParameter1.equals(VoiceEnum.FR_RENEE))
			voice = Voice.FR_RENEE;
		else if(VoiceEnumParameter1.equals(VoiceEnum.GB_KATE))
			voice = Voice.GB_KATE;
		else if(VoiceEnumParameter1.equals(VoiceEnum.IT_FRANCESCA))
			voice = Voice.IT_FRANCESCA;
		
		InputStream stream = service.synthesize(Text, voice, AudioFormat.WAV).execute();

		IMendixObject object = Core.instantiate(getContext(), Speech.entityName);
		Core.storeFileDocumentContent(getContext(), object, stream);
		
		return object;
		// END USER CODE
	}

	/**
	 * Returns a string representation of this action
	 */
	@Override
	public String toString()
	{
		return "TextToSpeech";
	}

	// BEGIN EXTRA CODE
	// END EXTRA CODE
}
