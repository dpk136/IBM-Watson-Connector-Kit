// This file was generated by Mendix Modeler.
//
// WARNING: Only the following code will be retained when actions are regenerated:
// - the import list
// - the code between BEGIN USER CODE and END USER CODE
// - the code between BEGIN EXTRA CODE and END EXTRA CODE
// Other code you write will be lost the next time you deploy the project.
// Special characters, e.g., é, ö, à, etc. are supported in comments.

package watsonservices.actions;

import java.util.List;
import com.ibm.watson.developer_cloud.dialog.v1.DialogService;
import com.ibm.watson.developer_cloud.dialog.v1.model.Conversation;
import com.mendix.systemwideinterfaces.core.IContext;
import com.mendix.systemwideinterfaces.core.IMendixObject;
import com.mendix.webui.CustomJavaAction;

public class Converse extends CustomJavaAction<Boolean>
{
	private IMendixObject __message;
	private watsonservices.proxies.Message message;
	private String username;
	private String password;

	public Converse(IContext context, IMendixObject message, String username, String password)
	{
		super(context);
		this.__message = message;
		this.username = username;
		this.password = password;
	}

	@Override
	public Boolean executeAction() throws Exception
	{
		this.message = __message == null ? null : watsonservices.proxies.Message.initialize(getContext(), __message);

		// BEGIN USER CODE
		DialogService service = new DialogService();
		service.setUsernameAndPassword(this.username,this.password);
		watsonservices.proxies.Conversation conversation = message.getMessage_Conversation();
		
		Conversation conv = new Conversation();
		conv.setDialogId(conversation.getDialogID());
		
		if(conversation.getClientID() != null){
			conv.setClientId(conversation.getClientID());
		}
		if(conversation.getConversationID() != null){
			conv.setId(conversation.getConversationID());
		}
		
		Conversation response = service.converse(conv, message.getInput()).execute();

		//Update conversation if this is a new conversation
		if (conversation.getConversationID() == null) {
			conversation.setClientID(response.getClientId());
			conversation.setConversationID(response.getId());
			conversation.commit();
		}	

		//Update message	
		String completeString = "";
		List<String> output = response.getResponse();
		for (String string : output) {
			if (completeString == "") {
				completeString = string;
			} else {
				completeString = completeString + "\r\n" + string;
			}
		}
		message.setOutput(completeString);
		message.setFinished(true);
		message.commit();
		return true;
		// END USER CODE
	}

	/**
	 * Returns a string representation of this action
	 */
	@Override
	public String toString()
	{
		return "Converse";
	}

	// BEGIN EXTRA CODE
	// END EXTRA CODE
}
